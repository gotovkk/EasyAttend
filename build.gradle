plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id("jacoco")  // Для проверки покрытия кода
}

group = 'me.bsuir'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	dependencies {
		implementation("org.springframework.boot:spring-boot-starter-data-jpa")
		implementation("org.springframework.boot:spring-boot-starter-web")
		implementation("me.paulschwarz:spring-dotenv:4.0.0")
		implementation("org.springframework.boot:spring-boot-starter-security")
		implementation("org.modelmapper:modelmapper:3.1.1")
		implementation("org.springframework.boot:spring-boot-starter-validation")
		implementation("org.mapstruct:mapstruct:1.6.3")
		runtimeOnly("org.postgresql:postgresql")
		compileOnly("org.projectlombok:lombok")
		developmentOnly("org.springframework.boot:spring-boot-devtools")
		annotationProcessor("org.projectlombok:lombok")
		annotationProcessor("org.mapstruct:mapstruct-processor:1.6.3")
		testImplementation("org.springframework.boot:spring-boot-starter-test")
		testRuntimeOnly("org.junit.platform:junit-platform-launcher")
		implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6")

		// Тестирование
		testImplementation("org.junit.jupiter:junit-jupiter:5.8.1")
		testImplementation("org.mockito:mockito-core:4.5.1")

		testRuntimeOnly("org.junit.platform:junit-platform-launcher")
		testImplementation("com.google.jimfs:jimfs:1.3.0")
	}
}

tasks.named('test') {
	useJUnitPlatform()
}


tasks.test {
	useJUnitPlatform()
	finalizedBy(tasks.jacocoTestReport)  // Генерирует отчет после тестов
}

tasks.jacocoTestReport {
	reports {
		xml.required.set(true)  // Для CI/CD
		html.required.set(true) // Отчет z1в HTML (будет в build/reports/jacoco/test/html)
	}
	dependsOn(tasks.test)  // Запускает тесты перед генерацией отчета
}

// Минимальное покрытие кода 80%
//tasks.jacocoTestCoverageVerification {
//	violationRules {
//		rule {
//			limit {
//				minimum = "0.8".toBigDecimal()  // 80% покрытия
//			}
//		}
//	}
//}